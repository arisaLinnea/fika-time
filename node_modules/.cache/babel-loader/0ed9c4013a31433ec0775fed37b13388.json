{"ast":null,"code":"const express = require('express');\n\nconst path = require('path');\n\nconst bodyParser = require('body-parser');\n\nconst app = express();\n\nconst Pusher = require('pusher');\n\nconst pusher = new Pusher({\n  appId: 'APP_ID',\n  key: 'YOUR_KEY',\n  secret: 'YOUR_SECRET',\n  cluster: 'YOUR_CLUSTER',\n  encrypted: true\n});\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use((req, res, next) => {\n  // Website you wish to allow to connect\n  res.setHeader('Access-Control-Allow-Origin', '*'); // Request methods you wish to allow\n\n  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE'); // Request headers you wish to allow\n\n  res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type'); // Set to true if you need the website to include cookies in the requests sent\n  // to the API (e.g. in case you use sessions)\n\n  res.setHeader('Access-Control-Allow-Credentials', true); // Pass to next layer of middleware\n\n  next();\n});\napp.set('port', 5000);\napp.get('/', (req, res) => {\n  res.send('Welcome');\n});\napp.post('/prices/new', (req, res) => {\n  pusher.trigger('coin-prices', 'prices', {\n    prices: req.body.prices\n  });\n  res.sendStatus(200);\n});\napp.listen(app.get('port'), () => {\n  console.log('Node app is running on port', app.get('port'));\n});","map":{"version":3,"sources":["C:/Developing/pwa-react/server.js"],"names":["express","require","path","bodyParser","app","Pusher","pusher","appId","key","secret","cluster","encrypted","use","json","urlencoded","extended","req","res","next","setHeader","set","get","send","post","trigger","prices","body","sendStatus","listen","console","log"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAMG,GAAG,GAAGJ,OAAO,EAAnB;;AACA,MAAMK,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAMK,MAAM,GAAG,IAAID,MAAJ,CAAW;AACtBE,EAAAA,KAAK,EAAE,QADe;AAEtBC,EAAAA,GAAG,EAAE,UAFiB;AAGtBC,EAAAA,MAAM,EAAE,aAHc;AAItBC,EAAAA,OAAO,EAAE,cAJa;AAKtBC,EAAAA,SAAS,EAAE;AALW,CAAX,CAAf;AAQAP,GAAG,CAACQ,GAAJ,CAAQT,UAAU,CAACU,IAAX,EAAR;AACAT,GAAG,CAACQ,GAAJ,CAAQT,UAAU,CAACW,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AAEAX,GAAG,CAACQ,GAAJ,CAAQ,CAACI,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxB;AACAD,EAAAA,GAAG,CAACE,SAAJ,CAAc,6BAAd,EAA6C,GAA7C,EAFwB,CAGxB;;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,wCAA9C,EAJwB,CAKxB;;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,8BAAd,EAA8C,+BAA9C,EANwB,CAOxB;AACA;;AACAF,EAAAA,GAAG,CAACE,SAAJ,CAAc,kCAAd,EAAkD,IAAlD,EATwB,CAUxB;;AACAD,EAAAA,IAAI;AACP,CAZD;AAcAd,GAAG,CAACgB,GAAJ,CAAQ,MAAR,EAAiB,IAAjB;AAEAhB,GAAG,CAACiB,GAAJ,CAAQ,GAAR,EAAa,CAACL,GAAD,EAAMC,GAAN,KAAc;AACvBA,EAAAA,GAAG,CAACK,IAAJ,CAAS,SAAT;AACH,CAFD;AAIAlB,GAAG,CAACmB,IAAJ,CAAS,aAAT,EAAwB,CAACP,GAAD,EAAMC,GAAN,KAAc;AAClCX,EAAAA,MAAM,CAACkB,OAAP,CAAgB,aAAhB,EAA+B,QAA/B,EAAyC;AACrCC,IAAAA,MAAM,EAAET,GAAG,CAACU,IAAJ,CAASD;AADoB,GAAzC;AAGAR,EAAAA,GAAG,CAACU,UAAJ,CAAe,GAAf;AACH,CALD;AAOAvB,GAAG,CAACwB,MAAJ,CAAWxB,GAAG,CAACiB,GAAJ,CAAQ,MAAR,CAAX,EAA4B,MAAM;AAC9BQ,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2C1B,GAAG,CAACiB,GAAJ,CAAQ,MAAR,CAA3C;AACH,CAFD","sourcesContent":["const express = require('express')\r\nconst path = require('path')\r\nconst bodyParser = require('body-parser')\r\nconst app = express()\r\nconst Pusher = require('pusher')\r\n\r\nconst pusher = new Pusher({\r\n    appId: 'APP_ID',\r\n    key: 'YOUR_KEY',\r\n    secret: 'YOUR_SECRET',\r\n    cluster: 'YOUR_CLUSTER',\r\n    encrypted: true\r\n})\r\n\r\napp.use(bodyParser.json())\r\napp.use(bodyParser.urlencoded({ extended: false }))\r\n\r\napp.use((req, res, next) => {\r\n    // Website you wish to allow to connect\r\n    res.setHeader('Access-Control-Allow-Origin', '*')\r\n    // Request methods you wish to allow\r\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE')\r\n    // Request headers you wish to allow\r\n    res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type')\r\n    // Set to true if you need the website to include cookies in the requests sent\r\n    // to the API (e.g. in case you use sessions)\r\n    res.setHeader('Access-Control-Allow-Credentials', true)\r\n    // Pass to next layer of middleware\r\n    next()\r\n})\r\n\r\napp.set('port', (5000))\r\n\r\napp.get('/', (req, res) => {\r\n    res.send('Welcome')\r\n})\r\n\r\napp.post('/prices/new', (req, res) => {\r\n    pusher.trigger( 'coin-prices', 'prices', {\r\n        prices: req.body.prices\r\n    });\r\n    res.sendStatus(200);\r\n})\r\n\r\napp.listen(app.get('port'), () => {\r\n    console.log('Node app is running on port', app.get('port'))\r\n})"]},"metadata":{},"sourceType":"script"}